name: 'docker-build-action'
description: 'Simplified Docker image builds with Github Actions.'
inputs:
  tags:
    description: 'Enter the tag you would like to name your image with. (example: myorg/myapp:production)'
    required: true
  registry-username:
    description: 'Enter the username to authenticate with your registry.'
    default: "${{ github.actor }}"
    required: true
  registry-token:
    description: 'Enter the token or password to authenticate with your registry. (an access token is highly recommended)'
    default: "${{ secrets.GITHUB_TOKEN }}"
    required: true
  registry:
    description: 'Comma-separated list of container registries to authenticate with (e.g., "docker.io,ghcr.io").'
    default: 'docker.io' # Default to Docker Hub if not specified
    required: false
  context:
    description: 'The relative path to the Dockerfile.'
    default: '.'
    required: false
  dockerfile:
    description: 'Filename of the Dockerfile within the context that you set.'
    default: '{context}/Dockerfile'
    required: false
  target:
    description: 'Set the target build stage to build.'
    default: ''
    required: false
  platforms:
    description: 'Comma separated list of platforms.'
    default: 'linux/amd64'
    required: false
runs:
  using: 'composite'
  steps:

      - name: Login to Docker Hub
        if: contains(inputs.registry, 'docker.io')
        uses: docker/login-action@v3
        with:
          username: ${{ inputs.registry-username }}
          password: ${{ inputs.registry-token }}
          registry: docker.io

      - name: Login to GitHub Container Registry
        if: contains(inputs.registry, 'ghcr.io')
        uses: docker/login-action@v3
        with:
          username: ${{ inputs.registry-username }}
          password: ${{ inputs.registry-token }}
          registry: ghcr.io

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.context }}
          platforms: ${{ inputs.platforms }}
          file: ${{ inputs.dockerfile }}
          pull: true
          push: true
          tags: ${{ inputs.tags }}
          target: ${{ inputs.target }}
branding:
  icon: 'server'
  color: 'blue'
